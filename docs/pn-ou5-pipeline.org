* Stages in data reduction and analysis
+ I am going to follow similar steps to what I did with the Owl and the Turtle
+ But this time I will try and make a proper re-useable python library, rather than just have snippets of code spread over an org file
+ And I will make jupyter notebooks to demonstrate use of the library
** 00 Preliminary organization
*** Find list of image+slit exposures
*** Set up astrometry.net
1. Find the HEALpix tiles
   + This is done in [[file:../notebooks/00-00-inspect-orig-files.py][00-00-inspect-orig-files.py]]
     + [[file:../notebooks/00-00-inspect-orig-files.ipynb][00-00-inspect-orig-files.ipynb]]
2. Download data files from http://data.astrometry.net/5000/
   + I got ~index500[0-4]-13.fits~ and ~index500[5-7]-03.fits~
3. Copy data files to [[file:../../../Work/astrometry/data/]]
4. Install ~astrometry-net~
   - Used Homebrew
5. Configure ~astrometry-net~
   - [[file:../../../../../usr/local/Cellar/astrometry-net/0.85_1/etc/astrometry.cfg][file:/usr/local/Cellar/astrometry-net/0.85_1/etc/astrometry.cfg]]
   - Turn on ~inparallel~
   - Use ~add_path~ to add my data folder (see above)
*** Test of YAML files
**** Make a YAML file for testing
#+begin_src yaml :tangle test.yml
  this: that
  tother:
    - one
    - two
    - three
#+end_src
**** A database of all the slits
+ I will make this by hand, even though some of the info could be obtained automatically
+ To start off with, I will key it all by the image name, but I might change that later

#+begin_src yaml :tangle ../data/image-slit-database.yml
  -
    image_id: N10035   
    line_id: Ha        
  -
    image_id: N10042   
    line_id: Ha        
  -
    image_id: N10047o  
    problem: Missing   
  -
    image_id: N20001   
    problem: Unfocused 
  -
    image_id: N20008   
    line_id: O III   
  -
    image_id: N20011   
    line_id: Ha        
  -
    image_id: spm0020o 
    line_id: Ha        
  -
    image_id: spm0025o 
    line_id: O III   
  -
    image_id: spm0047o 
    line_id: Ha        
  -
    image_id: spm0052o 
    line_id: O III   
  -
    image_id: spm0053o 
    line_id: Ha        
  -
    image_id: spm0058o 
    line_id: O III   
  -
    image_id: spm0109o 
    line_id: O III   
  -
    image_id: spm0210o 
    line_id: Ha        
  -
    image_id: spm0214o 
    line_id: Ha        
  -
    image_id: spm0431o 
    line_id: Ha        
  -
    image_id: spm0439o 
    line_id: Ha        
  -
    image_id: spm0600o 
    line_id: Ha        
#+end_src


**** Read in test file as a dict
#+begin_src python :return data :results verbatim
  import yaml

  data = yaml.load(open("test.yml"))
#+end_src

#+RESULTS:
: {'this': 'that', 'tother': ['one', 'two', 'three']}

That seems to work fine

#+begin_src python :return data :results verbatim
  import yaml

  data = yaml.load(open("../data/image-slit-database.yml"))
#+end_src

#+RESULTS:
: [{'image_id': 'N10035', 'line_id': 'Ha'}, {'image_id': 'N10042', 'line_id': 'Ha'}, {'image_id': 'N10047o', 'problem': 'Missing'}, {'image_id': 'N20001', 'problem': 'Unfocused'}, {'image_id': 'N20008', 'line_id': 'O III'}, {'image_id': 'N20011', 'line_id': 'Ha'}, {'image_id': 'spm0020o', 'line_id': 'Ha'}, {'image_id': 'spm0025o', 'line_id': 'O III'}, {'image_id': 'spm0047o', 'line_id': 'Ha'}, {'image_id': 'spm0052o', 'line_id': 'O III'}, {'image_id': 'spm0053o', 'line_id': 'Ha'}, {'image_id': 'spm0058o', 'line_id': 'O III'}, {'image_id': 'spm0109o', 'line_id': 'O III'}, {'image_id': 'spm0210o', 'line_id': 'Ha'}, {'image_id': 'spm0214o', 'line_id': 'Ha'}, {'image_id': 'spm0431o', 'line_id': 'Ha'}, {'image_id': 'spm0439o', 'line_id': 'Ha'}, {'image_id': 'spm0600o', 'line_id': 'Ha'}]

**** Load into a dataframe and astropy Table

Astropy table deals well with missing values

#+begin_src python :return data :results verbatim
  import yaml
  from astropy.table import Table

  data = yaml.load(open("../data/image-slit-database.yml"))
  data = Table(data)
#+end_src

#+RESULTS:
#+begin_example
image_id line_id  problem 
-------- ------- ---------
  N10035      Ha        --
  N10042      Ha        --
 N10047o      --   Missing
  N20001      -- Unfocused
  N20008   O III        --
  N20011      Ha        --
spm0020o      Ha        --
spm0025o   O III        --
spm0047o      Ha        --
spm0052o   O III        --
spm0053o      Ha        --
spm0058o   O III        --
spm0109o   O III        --
spm0210o      Ha        --
spm0214o      Ha        --
spm0431o      Ha        --
spm0439o      Ha        --
spm0600o      Ha        --
#+end_example

And so does pandas:

#+begin_src python :return data :results verbatim
  import yaml
  from pandas import DataFrame

  data = yaml.load(open("../data/image-slit-database.yml"))
  data = DataFrame(data)
#+end_src

#+RESULTS:
#+begin_example
    image_id line_id    problem
0     N10035      Ha        NaN
1     N10042      Ha        NaN
2    N10047o     NaN    Missing
3     N20001     NaN  Unfocused
4     N20008   O III        NaN
5     N20011      Ha        NaN
6   spm0020o      Ha        NaN
7   spm0025o   O III        NaN
8   spm0047o      Ha        NaN
9   spm0052o   O III        NaN
10  spm0053o      Ha        NaN
11  spm0058o   O III        NaN
12  spm0109o   O III        NaN
13  spm0210o      Ha        NaN
14  spm0214o      Ha        NaN
15  spm0431o      Ha        NaN
16  spm0439o      Ha        NaN
17  spm0600o      Ha        NaN
#+end_example


** 01 Astrometry of slits and images

*** Run ~astrometry-net~ on all the images
+ Run these in the terminal
  + I divide the images in two groups since the pixel scale is different
+ The ones starting ~crN~ have 2x2 binning
  #+begin_src sh :dir ../data :results verbatim :eval no
    for F in $(grep crN image-list.dat); do
        solve-field --config astrometry-net/astrometry.cfg \
                --ra 318.58 --dec 43.69 --radius 1.0\
                --scale-units arcsecperpix --scale-low 0.3 --scale-high 0.4\
                --depth 50 --dir wcs --new-fits '%s-wcs.fits'\
                --no-tweak --overwrite originals/$F.fits 
    done
  #+end_src
+ The ones starting ~crspm~ have 3x3 binning
  #+begin_src sh :dir ../data :results verbatim :eval no
    for F in $(grep crspm image-list.dat); do
        solve-field --config astrometry-net/astrometry.cfg \
                --ra 318.58 --dec 43.69 --radius 1.0\
                --scale-units arcsecperpix --scale-low 0.5 --scale-high 0.6\
                --depth 50 --dir wcs --new-fits '%s-wcs.fits'\
                --no-tweak --overwrite originals/$F.fits 
    done
  #+end_src


*** List of all the images
| N10035   | Ha        |
| N10042   | Ha        |
| N10047o  | Missing   |
| N20001   | Unfocused |
| N20008   | [O III]   |
| N20011   | Ha        |
| spm0020o | Ha        |
| spm0025o | [O III]   |
| spm0047o | Ha        |
| spm0052o | [O III]   |
| spm0053o | Ha        |
| spm0058o | [O III]   |
| spm0109o | [O III]   |
| spm0210o | Ha        |
| spm0214o | Ha        |
| spm0431o | Ha        |
| spm0439o | Ha        |
| spm0600o | Ha        |



#+RESULTS:
: {'this': 'that', 'tother': ['one', 'two', 'three']}

** 02 Photometry correction of slits
** 03 Isovelocity images
* Initial messages from Teresa
** 2021-06-21
: Al ver los espectros, se ven con mucho ruido, esto es porque eliminé
: el background, creo que mejor te envio los originales para que también
: tengan el mismo tamaño, el último corte lo hice antes de cambiar la
: versión de la mac, de hecho haré como con la tortuga, te envio todo el
: material ya que no he tomado en cuenta algunas posiciones, tal vez
: sean de utilidad para la parte central.

#+begin_example
  ,*****************
  28 de Agosto 2017
  ,*****************

  N1035 I+S  Halpha
  N1036 espectro Ha
  N1039 espelctro [OIII]

  N1042 I+S
  N1043 espectro Ha
  N1045 espectro [OIII]
  N1047 slit+image

  N2001 I+S desenfocada
  N2004 espectro ha
  N2006 espectro [OIII]
  N2008 I+S confiar en esta posicion

  POSICION D
  N2011 I+S
  N2012 espec ha


  MAYO 1 2018

  crspm0021o_bx.fits Ha
  crspm0023o_bx oiii


  MAYO 2 2018

  crspm047 i+s
  crspm048 espec
  crspm050 spec
  crspm052 s+i

  crspm053 i+s
  crspm054 spec
  crspm056 spec
  crspm058 S+i

  spm104 I+S
  spm105 esp
  spm106 lamp
  spm107 spe
  spm108 arc
  spm109 s+i

  14/09/2019

  Ha

  spm0210 I+S
  spm0211 spec

  spm0214 I+S
  spm0215 spec

  spm0431 I+S
  spm0432 spec


  spm0439 I+S
  spm0440 spec


  spm0600 I+S
  spm0601 spec
#+end_example
